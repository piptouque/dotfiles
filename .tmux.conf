# Tmux settings
set -g prefix C-a
unbind C-b

# Set colors
set-option -g default-terminal "screen-256color"

# Set reload key to r
bind r source-file ~/.tmux.conf

set-option -g history-limit 20000

# Count sessions start at 1
set -g base-index 1
set -s escape-time 0

# Set the title bar
set -g set-titles on
set -g set-titles-string "#(whoami) :: #h :: #(ifconfig |grep inet |awk -F: '{ print $2 }' |awk '{ print $1 }' |head -n 1)"

# set pane colors - hilight the active pane
set-option -g pane-border-style fg=colour235 #base02
set-option -g pane-active-border-style fg=colour240 #base01

# colorize messages in the command line
set-option -g message-style bg=black,fg=brightred,bright

# ----------------------
# Key binding
# -----------------------
# Use vim bindings
setw -g mode-keys vi
# bind-key C-a last-window
# bind-key C-n next-window
# bind-key C-p previous-window
# bind-key C-c new-window

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# IMPORTANT: following bindings have to match with .vimrc!!
key_go_pane_left='C-h'
key_go_pane_down='C-j'
key_go_pane_up='C-k'
key_go_pane_right='C-l'
key_go_pane_previous='C-\\'
#
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n "$key_go_pane_left"  if-shell "$is_vim" {
#   send-keys "$key_go_pane_left"
#   select-pane -L
# }
# bind-key -n "$key_go_pane_down"  if-shell "$is_vim" {
#   send-keys "$key_go_pane_down"
#   select-pane -D
# }
# bind-key -n "$key_go_pane_up"    if-shell "$is_vim" {
#   send-keys  "$key_go_pane_up"
#   select-pane -U
# }
# bind-key -n "$key_go_pane_right" if-shell "$is_vim" {
#   send-keys "$key_go_pane_right"
#   select-pane -R
# }
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# pip: not interest in a shortcut for the 'previous' pane.
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#    "bind-key -n \"$key_go_pane_previous\" if-shell \"$is_vim\" 'send-keys \"$key_go_pane_previous\"' 'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#    "bind-key -n \"$key_go_pane_previous\" if-shell \"$is_vim\" 'send-keys \"$key_go_pane_previous\"'  'select-pane -l'"
# bind-key -T copy-mode-vi "$key_go_pane_left" select-pane -L
# bind-key -T copy-mode-vi "$key_go_pane_down" select-pane -D
# bind-key -T copy-mode-vi "$key_go_pane_up"   select-pane -U
# bind-key -T copy-mode-vi "$key_go_pane_right"   select-pane -R
# bind-key -T copy-mode-vi "$key_go_pane_previous"   select-pane -l


# Mouse integration (Version <= 2.0)
set -gq mouse-select-pane on
set -gq mouse-resize-pane on
set -gq mouse-select-window on
set-window-option -gq mode-mouse on

# Mouse integration (Version >= 2.1)
set -gq mouse on


# ----------------------
# Status Bar
# -----------------------
set-option -g status on                # turn the status bar on
set -gq status-utf8 on                  # set utf-8 for the status bar
set -g status-interval 5               # set update frequencey (default 15 seconds)
set -g status-justify centre           # center window list for clarity

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# set color for status bar
set-option -g status-style bg=colour235,fg=yellow,dim

# set window list colors - red for active and cyan for inactive
set-window-option -g window-status-style fg=brightblue,bg=colour236,dim
set-window-option -g window-status-current-style fg=brightred,bg=colour236,bright


set-option -g allow-rename off

# show host name and IP address on left side of status bar
set -g status-left-length 76
set -g status-left "#[fg=brightred]: #(whoami)#[fg=green] : #h : #[fg=yellow]#(ifconfig | grep inet | awk -F: '{ print $2 }' | awk '{ print $1 }' | head -n 1)"
set -g status-right "#[fg=blue] %d %b %Y : #[fg=green]%l:%M %p : #[fg=brightred]#(uptime | awk '{print $3,$4}' | tr -d , ) :"
# Powerline
if-shell 'env "$POWERLINE_CONFIG_COMMAND"' \
  'run-shell "powerline-daemon -q"'
if-shell '! [ -z "$POWERLINE_ROOT"]' \
  ' source "${POWERLINE_ROOT}/bindings/tmux/powerline.conf"'
# if-shell 'env "$POWERLINE_ROOT"' 'source "${POWERLINE_ROOT}/bindings/tmux/powerline.conf"'

#---------------- Copy/Paste--------------------
bind-key Escape copy-mode # `tmux prefix + Escape` starts copy mode.
bind-key p paste-buffer # `prefix + p` pastes the latest buffer

# Mouse integration (Version >= 2.6)
# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi Y send-keys -X copy-end-of-line
bind-key -T copy-mode-vi Escape send-keys -X cancel

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T vi-copy Enter send-keys -X copy-pipe-and-cancel "xclip -selection clipboard"

#------------------- TPM ---------------------------
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'christoomey/vim-tmux-navigator'

# Initialize TMUX plugin manager
# (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
